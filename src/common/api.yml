openapi: 3.0.0
info:
  title: URL Shortener API
  description: API to shorten URLs and retrieve shortened links.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /auth/shorten:
    post:
      summary: Shorten a long URL
      description: Generates a short URL and stores it in the database.
      tags:
        - URL Shortener
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                long_url:
                  type: string
                  example: "https://example.com/long-url"
                topic:
                  type: string
                  example: "Tech"
      responses:
        "200":
          description: Successfully shortened URL
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  message:
                    type: string
                    example: "Short URL created successfully"
                  data:
                    type: object
                    properties:
                      shortUrl:
                        type: string
                        example: "abc123"
                      long_url:
                        type: string
                        example: "https://example.com/long-url"
                      topic:
                        type: string
                        example: "Tech"
        "400":
          description: Invalid request body
        "500":
          description: Internal Server Error
  /auth/redirect/{shortUrl}:
    get:
      summary: Redirect to the long URL corresponding to the short URL.
      description: This endpoint redirects the user to the long URL based on the provided short URL.
      parameters:
        - in: path
          name: shortUrl
          required: true
          description: The short URL identifier that needs to be redirected.
          schema:
            type: string
            example: mF9PI7mS4
      responses:
        "301":
          description: Permanently moved to the long URL.
          headers:
            Location:
              description: The long URL to which the user is redirected.
              schema:
                type: string
                example: https://example.com/long-url
        "404":
          description: The short URL does not exist.
        "500":
          description: Internal server error.
  /auth/analytics/{shortUrl}:
    get:
      summary: Get analytics for a specific short URL
      description: Retrieve analytics for a specific shortened URL, including total clicks and unique users.
      parameters:
        - name: shortUrl
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  alias:
                    type: string
                  totalClicks:
                    type: integer
                  uniqueUsers:
                    type: integer
                  clicksByDate:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        clickCount:
                          type: integer
        "404":
          description: Short URL not found
        "500":
          description: Internal server error

  /auth/analytics/overall:
    get:
      summary: Get overall analytics for all URLs
      description: Retrieve overall analytics for all shortened URLs, including total clicks and unique users.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalUrls:
                    type: integer
                  totalClicks:
                    type: integer
                  uniqueUsers:
                    type: integer
                  clicksByDate:
                    type: array
                    items:
                      type: object
                      properties:
                        date:
                          type: string
                          format: date
                        clickCount:
                          type: integer
        "500":
          description: Internal server error
